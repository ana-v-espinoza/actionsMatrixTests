#######################################################
# Check dockerhub for updates to the tomcat container #
#######################################################

name: Check For Upstream Updates

on:
  schedule:
    # Once a day at 00:00 UTC
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  createMatrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    
    steps:
      - name: Checkout default branch
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Create matrix
        id: set-matrix
        run: |
          matrix=$(
          echo {\
            $(.github/helperScripts/remoteBranchNamesToJSON.sh)", "\
            $(.github/helperScripts/tomcatVersions.sh)", "\
            $(.github/helperScripts/jdkVersions.sh)\
          }\
          )
          echo $matrix
          echo "::set-output name=matrix::$matrix"

  verifyMatrix:
    runs-on: ubuntu-latest
    needs: createMatrix
    steps:
      - name: Verify matrix
        run: |
          matrix='${{ needs.createMatrix.outputs.matrix }}'
          echo $matrix

  checkUpstream:
    runs-on: ubuntu-latest
    needs: createMatrix
    strategy:
      matrix: ${{ fromJson(needs.createMatrix.outputs.matrix) }}

    steps:

    - name: Test git
      run: git --version

    - name: Checkout default branch
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Verify repo has been cloned
      run: |
        git status
        git branch -a
        git remote -v

    - name: Check matrix outputs
      #run: echo "Branch: ${{ matrix.branch }} Tomcat: ${{ matrix.tomcat }} JDK: ${{ matrix.jdk }}"
      #run: echo "Branch: "${{ matrix.branch }}" Tomcat: "${{ matrix.tomcat }}" JDK: "${{ matrix.jdk }}
      run: echo $(pwd)

    - name: Grab the most recent upstream tomcat version
      run: |
        upstreamtomcat=$(./.github/helperScripts/findTomcatVersion.sh ${{matrix.tomcat}} ${{ matrix.jdk }})
        echo $upstreamtomcat
        echo "upstreamtomcat=$upstreamtomcat" >> $GITHUB_ENV

    - name: Does most recent version exist
      run: |
        echo ${{ env.upstreamtomcat }}
        git branch -a
        git branch -a | grep "main" &&
        echo "Already up to date"

      #echo "Already up to date with Tomcat ${{ env.upstreamtomcat }} ||
      #echo "New Tomcat version ${{ env.upstreamcomcat }}" &&
      #echo "Psuedocode: Find most up to date tomcat version (${{ matrix.tomcat }}) with jdk version ${{ matrix.jkd }}" &&
      #echo "Psuedocode: Branch off of most recent version in repo

    - name: Update Dockerfiles
      run: echo "Update Dockerfiles"

    - name: Commit and push changes
      run: echo "Commit and push changes"
